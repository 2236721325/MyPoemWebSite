// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyPoem.EntityFramework;

#nullable disable

namespace MyPoem.EntityFramework.Migrations
{
    [DbContext(typeof(MyPoemDbContext))]
    [Migration("20220903143301_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MyPoem.Domain.Models.ChinaAuthor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriptions")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PeriodType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ChinaAuthors");
                });

            modelBuilder.Entity("MyPoem.Domain.Models.ChinaPoem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ChinaAuthorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("ParagraphsJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ChinaAuthorId");

                    b.ToTable("ChinaPoems");
                });

            modelBuilder.Entity("MyPoem.Domain.Models.ChinaPoem", b =>
                {
                    b.HasOne("MyPoem.Domain.Models.ChinaAuthor", "ChinaAuthor")
                        .WithMany("ChinaPoems")
                        .HasForeignKey("ChinaAuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChinaAuthor");
                });

            modelBuilder.Entity("MyPoem.Domain.Models.ChinaAuthor", b =>
                {
                    b.Navigation("ChinaPoems");
                });
#pragma warning restore 612, 618
        }
    }
}
